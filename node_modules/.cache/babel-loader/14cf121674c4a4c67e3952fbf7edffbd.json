{"ast":null,"code":"import _classCallCheck from \"/Users/egomezmo/Bootcamp/AAA/Clicky-Game/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/egomezmo/Bootcamp/AAA/Clicky-Game/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/egomezmo/Bootcamp/AAA/Clicky-Game/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/egomezmo/Bootcamp/AAA/Clicky-Game/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/egomezmo/Bootcamp/AAA/Clicky-Game/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/egomezmo/Bootcamp/AAA/Clicky-Game/src/App.js\";\nimport React, { Component } from \"react\"; // REACT ALWAYS\n\nimport Card from \"./components/Card\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport emoji from \"./cards.json\";\nimport \"./App.css\"; // COMPONENT CSS\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      emoji: emoji,\n      clickedEmojisIds: [],\n      score: 0,\n      goal: 15,\n      status: \"\"\n    };\n\n    _this.shuffleScoreCard = function (id) {\n      var clickedEmojisIds = _this.state.clickedEmojisIds;\n\n      if (clickedEmojisIds.includes(id)) {\n        _this.setState({\n          clickedEmojisIds: [],\n          score: 0,\n          status: \"Game Over! Click to play again!\"\n        });\n\n        return;\n      } else {\n        clickedEmojisIds.push(id);\n\n        if (clickedEmojisIds.length === 10) {\n          _this.setState({\n            score: 10,\n            status: \"You Won! Click to play again!\",\n            clickedEmojisIds: []\n          });\n\n          console.log('You Win');\n          return;\n        }\n\n        _this.setState({\n          emoji: emoji,\n          clickedEmojisIds: clickedEmojisIds,\n          score: clickedEmojisIds.length,\n          status: \" \"\n        });\n\n        for (var i = emoji.length - 1; i > 0; i--) {\n          var j = Math.floor(Math.random() * (i + 1));\n          var _ref = [emoji[j], emoji[i]];\n          emoji[i] = _ref[0];\n          emoji[j] = _ref[1];\n        }\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return (// 1. GENERAL \n        // 2. HEADER\n        // 3. CARDS\n        // 4. FOOTER\n        React.createElement(\"div\", {\n          class: \"container\",\n          id: \"general\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, React.createElement(Header, {\n          total: this.state.score,\n          goal: 10,\n          status: this.state.status,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }), React.createElement(Wrapper, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"container\",\n          id: \"allCards\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, this.state.emoji.map(function (emoji) {\n          return React.createElement(Card, {\n            shuffleScoreCard: _this2.shuffleScoreCard,\n            id: emoji.id,\n            key: emoji.id,\n            image: emoji.image,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63\n            },\n            __self: this\n          });\n        })), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        })), React.createElement(Footer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }))\n      );\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/egomezmo/Bootcamp/AAA/Clicky-Game/src/App.js"],"names":["React","Component","Card","Wrapper","Header","Footer","emoji","App","state","clickedEmojisIds","score","goal","status","shuffleScoreCard","id","includes","setState","push","length","console","log","i","j","Math","floor","random","map","image"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"; // REACT ALWAYS\n\nimport Card from \"./components/Card\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\n\nimport emoji from \"./cards.json\";\n\n\nimport \"./App.css\";         // COMPONENT CSS\n\nclass App extends Component {\n  state = {\n    emoji,\n    clickedEmojisIds: [],\n    score: 0,\n    goal: 15,\n    status: \"\"\n  };\n\n\n  shuffleScoreCard = id => {\n    let clickedEmojisIds = this.state.clickedEmojisIds;\n\n    if (clickedEmojisIds.includes(id)) {\n      this.setState({ clickedEmojisIds: [], score: 0, status: \"Game Over! Click to play again!\" });\n      return;\n    } else {\n      clickedEmojisIds.push(id)\n\n      if (clickedEmojisIds.length === 10) {\n        this.setState({ score: 10, status: \"You Won! Click to play again!\", clickedEmojisIds: [] });\n        console.log('You Win');\n        return;\n      }\n\n      this.setState({ emoji, clickedEmojisIds, score: clickedEmojisIds.length, status: \" \" });\n\n      for (let i = emoji.length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1));\n        [emoji[i], emoji[j]] = [emoji[j], emoji[i]];\n      }\n    }\n  }\n\n\n  render() {\n    return (\n      // 1. GENERAL \n      // 2. HEADER\n      // 3. CARDS\n      // 4. FOOTER\n\n\n      <div class=\"container\" id=\"general\">\n\n        <Header total={this.state.score} goal={10} status={this.state.status} />\n\n        <Wrapper>\n\n          <div class=\"container\" id=\"allCards\">\n            {this.state.emoji.map(emoji => (<Card shuffleScoreCard={this.shuffleScoreCard} id={emoji.id} key={emoji.id} image={emoji.image} />))}\n          </div><br></br>\n\n        </Wrapper>\n\n        <Footer />\n\n      </div>\n    );\n  }\n}\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}